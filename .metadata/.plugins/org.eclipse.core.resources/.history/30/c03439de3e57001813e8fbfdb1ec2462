//© A+ Computer Science  -  www.apluscompsci.com
//Name -
//Date -
//Class -
//Lab  -

import java.awt.Color;
import java.awt.Graphics;

public class Ball extends Block implements Collidable
{
	private int xSpeed;
	private int ySpeed;

	public Ball()
	{
		super(200,200);
		xSpeed = 2;
		ySpeed = 1;
	}

	public Ball(int x, int y)
	{
		super(x,y);
		xSpeed = 2;
		ySpeed = 1;
	}
	//add the other Ball constructors
	
	
	public Ball(int x, int y, int w, int h){
		super (x,y,w,h);
		xSpeed = 2;
		ySpeed = 1;
	}
	
	public Ball(int x, int y, int w, int h, Color c){
		super (x,y,w,h,c);
		xSpeed = 2;
		ySpeed = 1;
	}
	
	public Ball(int x, int y, int w, int h, Color c, int xSpeed, int ySpeed){
		super (x,y,w,h,c);
		setXSpeed(xSpeed);
		setYSpeed(ySpeed);
	}
	
	
	
	
	
   //add the set methods
   public void setXSpeed(int x){
		xSpeed = x;
	}
	
	public void setYSpeed(int y){
		ySpeed = y;
	}

	
	
   public void moveAndDraw(Graphics window)
   {
   	//draw a white ball at old ball location
	  draw(window,Color.WHITE);

      setX(getX()+ getXSpeed());
		//setY
      setY(getY()+ getYSpeed());
		//draw the ball at its new location
      draw(window);
   }
   
   @Override
	public boolean equals(Object obj)
	{
		Ball two = (Ball)obj;
		if (getX() == two.getX() && getY() == two.getY() && getWidth() == two.getWidth() && getHeight() == two.getHeight() && getXSpeed() == two.getXSpeed() && getYSpeed() == two.getYSpeed())
			return true;

		return false;
	}   

   //add the get methods
	
	
	public int getXSpeed(){
		return xSpeed;
	}
	
	public int getYSpeed(){
		return ySpeed;
	}
	
	
	 public boolean didCollideLeft(Object obj){
		 Block block = (Block)obj;
			if((getX() == block.getX() + block.getWidth()) && getY() + getHeight()/2 > block.getY() && getY() + getHeight()/2 < block.getY() + block.getHeight())
			{
				return true;
			}
			return false;
	 
		 /*Paddle compare = (Paddle)obj;
		 if((this.getX() <= compare.getX() + compare.getWidth()) && (this.getX() + this.getWidth() >= compare.getX()) &&//check if paddle is within bounds of x
					((compare.getY() <= this.getY()) && (this.getY() <= compare.getY() + compare.getHeight()) 
							)){
			return true;
			}
		 
		 return false;*/
	 }

	 
	 public boolean didCollideRight(Object obj){
		 Block block = (Block)obj;
			if(getX() + getWidth() >= block.getX() && getX() < block.getX() && getY() + getHeight()/2 > block.getY() && getY() + getHeight()/2 < block.getY() + block.getHeight())
			{
				return true;
			}
			return false;
		 /*Paddle compare = (Paddle)obj;
		 if((this.getX() <= compare.getX() + compare.getWidth()) && (this.getX() >= compare.getX()) &&//check if paddle is within bounds of x
					((this.getY() >= compare.getY()) && (this.getY() <= compare.getY() + compare.getHeight()) 
							)){
			return true;
			}
		 
		 return false;*/
	 }
	 
	 
	 public boolean didCollideTop(Object obj){
		 Block block = (Block)obj;
			if(getY() <= block.getY() + block.getHeight() && getY() >= block.getY())
			{
				return true;
			}
			return false;
		/*Paddle compare = (Paddle)obj;
		if (this.getY() > compare.getY() && this.getY() < compare.getY() + compare.getHeight() && this.getX() > compare.getX() && this.getX() < compare.getX() + compare.getWidth()){
			return true;
		}
		return false;*/
	 }
	 
	 
	 public boolean didCollideBottom(Object obj){
		 Block block = (Block)obj;
			if(getY() + getHeight() == block.getY())
			{
				return true;
			}
			return false;
		 /*Paddle compare = (Paddle)obj;
			if (this.getX() <= compare.getX() + compare.getWidth() && this.getX() >= compare.getX() 
					&& this.getY() <= compare.getY() + compare.getHeight() 
					){
				return true;
			}*/
			
	 }
	
	 
	@Override
   //add a toString() method
	public String toString(){
		String output = "";
		output = "" + getX() + " " + getY() + " " + getWidth() + " " + getHeight() + " " + getColor() + " " + getXSpeed() + " " + getYSpeed();
		return output; 
	}
	
}